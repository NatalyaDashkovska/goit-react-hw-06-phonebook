{"version":3,"sources":["components/Filter/Filter.module.css","index.module.css","redux/phonebook/phonebook-types.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","makeCard","createAction","types","name","number","payload","text","id","uuidv4","deleteCard","filterValue","Form","loginId","telId","state","handleChange","e","setState","target","value","formSubmit","preventDefault","oldCard","props","contacts","find","newCard","toLowerCase","alert","onSubmit","reset","className","styles","title","form","this","type","pattern","required","onChange","input","button","Component","connect","phonebook","dispatch","phonebookActions","filter","getVisible","allContacts","normalize","includes","onDeleteCard","list","map","item","content","onClick","section","ContactForm","contactsReducer","createReducer","filterReducer","_","rootReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dfade928.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2J4b9\",\"input\":\"Filter_input__3ds-a\",\"title\":\"Filter_title__3tLO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"src_section__r60cf\",\"title\":\"src_title__3sZpp\"};","export default {\n  ADD: 'phonebook/Add',\n  DELETE: 'phonebook/Delete',\n  FILTER: 'phonebook/Filter',\n};\n","import types from './phonebook-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst makeCard = createAction(types.ADD, (name, number) => {\n  return {\n    payload: {\n      text: name,\n      id: uuidv4(),\n      number,\n    },\n  };\n});\n\nconst deleteCard = createAction(types.DELETE);\nconst filterValue = createAction(types.FILTER);\n\nexport default { makeCard, deleteCard, filterValue };\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nclass Form extends Component {\n  loginId = uuidv4();\n  telId = uuidv4();\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  formSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const contacts = this.props.contacts;\n\n    const oldCard = contacts.find(\n      newCard => name.toLowerCase() === newCard.text.toLowerCase(),\n    );\n\n    if (oldCard) {\n      alert(`${oldCard.text}  is already in contacts`);\n      return;\n    }\n\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    return (\n      <div>\n        <h3 className={styles.title}>Name</h3>\n        <form className={styles.form} onSubmit={this.formSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.loginId}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n          <h3 className={styles.title}>Number</h3>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.telId}\n            value={this.state.number}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n          <br />\n          <button type=\"submit\" className={styles.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    contacts: state.phonebook.contacts,\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(phonebookActions.makeCard(name, number)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.form}>\n      <label>\n        <p className={styles.title}>Filter</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    value: state.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(phonebookActions.filterValue(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\nimport { connect } from 'react-redux';\nconst ContactList = ({ contacts, onDeleteCard }) => {\n  return (\n    <div>\n      <ul className={styles.list}>\n        {contacts.map(({ id, text, number }) => (\n          <li key={id} className={styles.item}>\n            <p className={styles.content}>\n              {text} : {number}\n            </p>\n            <button className={styles.button} onClick={() => onDeleteCard(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst getVisible = (allContacts, filter) => {\n  const normalize = filter.toLowerCase();\n  return allContacts.filter(({ text }) =>\n    text.toLowerCase().includes(normalize),\n  );\n};\n\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => {\n  return {\n    contacts: getVisible(contacts, filter),\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onDeleteCard: id => dispatch(phonebookActions.deleteCard(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteCard: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\n\nimport { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport phonebookActions from './redux/phonebook/phonebook-actions';\nimport styles from './index.module.css';\nconst App = () => {\n  return (\n    <div className={styles.section}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  makeCard: text => dispatch(phonebookActions.makeCard(text)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport types from './phonebook-types';\nimport { createReducer } from '@reduxjs/toolkit';\n\nconst contactsReducer = createReducer([], {\n  [types.ADD]: (state, { payload }) => [...state, payload],\n  [types.DELETE]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [types.FILTER]: (_, { payload }) => payload,\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst persistedReducer = persistReducer(contactsPersistConfig, contactsReducer);\n\nconst store = configureStore({\n  reducer: { phonebook: persistedReducer },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__2E2lI\",\"title\":\"ContactForm_title__i5NXk\",\"form\":\"ContactForm_form__3DCbT\",\"input\":\"ContactForm_input__2elai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2Umqq\",\"item\":\"ContactList_item__3lKl3\",\"list\":\"ContactList_list__EozQH\",\"content\":\"ContactList_content__1zTDf\"};"],"sourceRoot":""}